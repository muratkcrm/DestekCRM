"""
Django settings for destek project.

Generated by 'django-admin startproject' using Django 1.11.16.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import django_heroku
import psycopg2
#import pymongo
#import mongoengine
import djongo
#import mysql

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from datetime import timedelta

#from pathlib import Path

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^lowf3igtd1rv14ius!hs_poysh!=b_=&m%^@w)9(ul1qgnu2z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0',
                 'localhost',
                 '127.0.0.1',
                 '*',
                 ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.admindocs',
    # --------modüller
    'Satis',
    'TalepYonetimi',
    'user',
    'app',
    'PerTakip',

    # -------üçüncü parti kurulumlar
    'crispy_forms',
    'bootstrap4',
    #'django_mysql',
    'djongo',
    'ckeditor',
    'ckeditor_uploader',
    'django_cleanup',
    'smart_selects',
    # 'captcha',
    'session_cleanup',
    'django_filters',
    'rest_framework',
    'rest_framework.authtoken',
    'bootstrap_datepicker_plus',

]

#  EMAIL ayarları yapılıyor
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = ''
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT = 587
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',

    ],
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.ScopedRateThrottle',
    ),
    'DEFAULT_THROTTLE_RATES': {
        'registerthrottle': '5/hour',
        'hasan': '5/hour',
    },
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME ': timedelta(minutes=10)
}



CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Close the session when user closes the browser
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_SAMESITE = 'Strict'
SESSION_SAVE_EVERY_REQUEST = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


]

ROOT_URLCONF = 'destek.urls'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
)

WSGI_APPLICATION = 'destek.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
   'default1': {
       'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'Fast123*',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'default2': {
         'ENGINE': 'djongo',
         'NAME': 'mongouser',
         'HOST': 'localhost',
     }
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'xmuoeflm',
#        'USER': 'xmuoeflm',
#        'PASSWORD': 'tgjQK-BXas-PQdunMYY3qbaY7vnQnWir',
#        'HOST': 'ruby.db.elephantsql.com',
#        'PORT': '5432',
#    }
#}

#DATABASES = {
#    'default': {
#        'ENGINE': 'djongo',
#        'NAME': 'CODcrmmk',
#        'HOST': 'mongodb+srv://codcrm:Tarum007@codcrmmk-t1pjx.mongodb.net/test?retryWrites=true&w=majority',
#        'USER': 'codcrm',
#        'PASSWORD':'Tarum007',
#        'ENFORCE_SCHEMA': False,
#    }
# }


#DATABASES = {
#   'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'mongouser',
#         'HOST': 'localhost',
#     }
#}

#AUTHENTICATION_BACKENDS = (
#    'mongoengine.django.auth.MongoEngineBackend',
#)

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'postgres',
#        'USER': 'postgres',
#        'PASSWORD': 'fast123',
#        'HOST': 'localhost',
#        'PORT': '5432',
#    }
#}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'wfacrm',
#        'USER': 'root',
#        'PASSWORD': 'Fast123*',
#        'HOST': 'localhost',
#        'PORT': '3306',
#        'OPTIONS': {
#            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#            'init_command': 'SET innodb_strict_mode=1',
#             # Tell MySQLdb to connect with 'utf8mb4' character set
#            'charset': 'utf8mb4',
#        }
#    }
#}#

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.mysql',
#        'NAME': 'wfacrm$wfacrm',
#        'USER': 'wfacrm',
#        'PASSWORD': 'Tarum007*',
#        'HOST': 'wfacrm.mysql.pythonanywhere-services.com',
#        'PORT': '3306',
#        'OPTIONS': {
#            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#            # 'init_command': 'SET innodb_strict_mode=1',
#            # Tell MySQLdb to connect with 'utf8mb4' character set
#            'charset': 'utf8mb4',
#        }
#    }
#}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'tr'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

#STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# STATIC_ROOT = os.path.join(BASE_DIR, "static")

django_heroku.settings(locals())

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


django_heroku.settings(locals())

DATE_INPUT_FORMATS = ['%d-%m-%Y']

CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
        "allowedContent": True,
        "width": "100%"
    },
}

CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_FILENAME_GENERATOR = 'utils.get_filename'
CKEDITOR_BASEPATH = "/static/ckeditor/ckeditor/"

# JQUERY_URL = False
USE_DJANGO_JQUERY = False

# Captcha - google.com/recaptcha
# RECAPTCHA_PUBLIC_KEY = "6LdX35EUAAAAAGOkfES0CluuiFVrznJ0rcb5tl9U"
# RECAPTCHA_PRİVATE_KEY = "6LdX35EUAAAAAC0xflV-kal_l5vfFUemZhcbWqK4"

# NOCAPTCHA = False
